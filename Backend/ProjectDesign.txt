+------------------------+       +------------------------+
|         User           |       |       UserManager      |             
+------------------------+       +------------------------+
| - userId: int          |       | - users: List<User>    |
| - username: String     |<----->| + registerUser(): User |
| - password: String     |       | + loginUser(): boolean |
| - email: String        |       | + logoutUser(): void   |
| - role: String         |       | + manageUser(): void   |
| - status: String       |       | + changeUserRole(): void|
| - createdDate: Date    |       | + resetUserPassword(): void|
| - lastLogin: Date      |       | + blockUser(): void    |
+------------------------+       +------------------------+
         ^
         |
         |
+------------------------+       +------------------------+
|       Customer         |       |        Admin           |
+------------------------+       +------------------------+
| - address: String      |       | - adminLevel: int      |
| - phone: String        |       | - department: String   |
| - loyaltyPoints: int   |       | + manageInventory()    |
| + viewBooks()          |       | + manageUsers()        |
| + searchBooks()        |       | + generateReports()    |
| + addBookToCart()      |       | + manageOrders()       |
| + manageProfile()      |       | + managePromotions()   |
+------------------------+       +------------------------+


+------------------------+       +------------------------+
|         Book           |       |     BookManager        |
+------------------------+       +------------------------+
| - bookId: int          |       | - books: List<Book>    |
| - title: String        |<----->| + addBook(): void      |
| - author: String       |       | + updateBook(): void   |
| - ISBN: String         |       | + removeBook(): void   |
| - publisher: String    |       | + searchBook(): List<Book>|
| - category: String     |       | + viewBookDetails(): Book|
| - price: double        |       | + manageBookStock(): void|
| - quantity: int        |       +------------------------+
| - description: String  |
| - publicationDate: Date|
| - coverImage: String   |
+------------------------+
         ^
         |
         |
+------------------------+       +------------------------+
|     PhysicalBook       |       |      EBook            |
+------------------------+       +------------------------+
| - shelfLocation: String|       | - fileFormat: String  |
| - condition: String    |       | - fileSizeMB: double  |
| - weight: double       |       | - downloadLink: String|
+------------------------+       | - deviceCompatibility |
                                 +------------------------+

+------------------------+       +------------------------+
|       ShoppingCart     |       |        Order          |
+------------------------+       +------------------------+
| - cartId: int          |       | - orderId: int        |
| - user: User           |<----->| - user: User          |
| - items: List<CartItem>|       | - orderDate: Date     |
| - createdDate: Date    |       | - status: String      |
| + addItem(): void      |       | - totalAmount: double |
| + removeItem(): void   |       | - paymentMethod: String|
| + updateQuantity(): void|       | - items: List<OrderItem>|
| + clearCart(): void    |       | - shippingAddress: String|
| + checkout(): Order    |       | + calculateTotal(): double|
+------------------------+       | + processPayment(): boolean|
         |                       | + updateStatus(): void |
         |                       +------------------------+
         v
+------------------------+       +------------------------+
|       CartItem         |       |       OrderItem       |
+------------------------+       +------------------------+
| - itemId: int          |       | - itemId: int         |
| - book: Book           |       | - book: Book          |
| - quantity: int        |       | - quantity: int       |
| - price: double        |       | - price: double       |
| + calculateSubtotal()  |       | - discount: double    |
+------------------------+       | + calculateSubtotal() |
                                 +------------------------+


+------------------------+       +------------------------+
|       Payment          |       |     OrderManager      |
+------------------------+       +------------------------+
| - paymentId: int       |       | - orders: List<Order> |
| - order: Order         |<----->| + createOrder(): Order|
| - amount: double       |       | + updateOrder(): void |
| - paymentDate: Date    |       | + cancelOrder(): void |
| - paymentMethod: String|       | + trackOrder(): String|
| - status: String       |       | + processOrder(): void|
| + processPayment(): bool|      | + shipOrder(): void   |
| + refund(): boolean    |       | + deliverOrder(): void|
+------------------------+       +------------------------+
         ^
         |
         |
+------------------------+       +------------------------+
|    OnlinePayment       |       |     CashPayment       |
+------------------------+       +------------------------+
| - transactionId: String|       | - receiptNumber: String|
| - gateway: String      |       | - cashierName: String |
+------------------------+       +------------------------+


+------------------------+       +------------------------+
|      Inventory         |       |        Report         |
+------------------------+       +------------------------+
| - books: Map<Book, int>|       | - reportId: int       |
| + checkStock(): int    |<----->| - title: String       |
| + updateStock(): void  |       | - generatedDate: Date |
| + alertLowStock(): List|       | - type: String        |
| + receiveBooks(): void |       | - content: String     |
| + shipBooks(): void    |       | - createdBy: User     |
+------------------------+       | + generatePDF(): void |
                                 | + sendByEmail(): void |
                                 +------------------------+
                                          ^
                                          |
                                          |
                         +------------------------+
                         |     SalesReport        |
                         +------------------------+
                         | - startDate: Date      |
                         | - endDate: Date        |
                         | - totalRevenue: double |
                         | - topSellingBooks: List|
                         +------------------------+



+------------------------+       +------------------------+
|      Promotion         |       |   PromotionManager    |
+------------------------+       +------------------------+
| - promotionId: int     |       | - promotions: List    |
| - name: String         |<----->| + createPromotion()   |
| - description: String  |       | + updatePromotion()   |
| - startDate: Date      |       | + deletePromotion()   |
| - endDate: Date        |       | + applyPromotion()    |
| - discountType: String |       | + listActivePromotions()|
| - discountValue: double|       +------------------------+
| - applicableBooks: List|
| - minimumPurchase: double|
| - isActive: boolean    |
+------------------------+

## Mối quan hệ giữa các lớp chính
1. User - Customer/Admin : Quan hệ kế thừa (Inheritance), Customer và Admin là các lớp con của User.
2. User - UserManager : Quan hệ kết hợp (Association), UserManager quản lý nhiều User.
3. Book - BookManager : Quan hệ kết hợp, BookManager quản lý nhiều Book.
4. Book - PhysicalBook/EBook : Quan hệ kế thừa, PhysicalBook và EBook là các lớp con của Book.
5. User - ShoppingCart : Quan hệ kết hợp, một User có một ShoppingCart.
6. ShoppingCart - CartItem : Quan hệ tổng hợp (Composition), ShoppingCart chứa nhiều CartItem.
7. ShoppingCart - Order : Quan hệ kết hợp, ShoppingCart có thể chuyển đổi thành Order.
8. Order - OrderItem : Quan hệ tổng hợp, Order chứa nhiều OrderItem.
9. Order - Payment : Quan hệ kết hợp, một Order có một Payment.
10. Order - OrderManager : Quan hệ kết hợp, OrderManager quản lý nhiều Order.
11. Book - Inventory : Quan hệ kết hợp, Inventory theo dõi số lượng của nhiều Book.
12. Promotion - PromotionManager : Quan hệ kết hợp, PromotionManager quản lý nhiều Promotion.